{
    "nodes": [
        {
            "id": 0,
            "replacement": "r:::tools/clang/spanify/tests/header-original.cc:::384:::5:::base::span<int>",
            "replacements": [
                "r:::tools/clang/spanify/tests/header-original.cc:::384:::5:::base::span<int>",
                "include-user-header:::tools/clang/spanify/tests/header-original.cc:::-1:::-1:::base/containers/span.h"
            ],
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": [
                "source"
            ]
        },
        {
            "id": 1,
            "replacement": "r:::tools/clang/spanify/tests/header-original.cc:::862:::7:::",
            "replacements": [
                "r:::tools/clang/spanify/tests/header-original.cc:::862:::7:::",
                "include-user-header:::tools/clang/spanify/tests/header-original.cc:::-1:::-1:::base/containers/span.h"
            ],
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": [
                "sink"
            ]
        },
        {
            "id": 2,
            "replacement": "r:::tools/clang/spanify/tests/header-original.h:::774:::5:::base::span<int>",
            "replacements": [
                "r:::tools/clang/spanify/tests/header-original.h:::774:::5:::base::span<int>",
                "include-user-header:::tools/clang/spanify/tests/header-original.h:::-1:::-1:::base/containers/span.h"
            ],
            "size_info_available": null,
            "visited": false,
            "debug_info": {
                "rewrite_applied": false,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": []
        },
        {
            "id": 3,
            "replacement": "r:::tools/clang/spanify/tests/header-original.cc:::1108:::7:::",
            "replacements": [
                "r:::tools/clang/spanify/tests/header-original.cc:::1108:::7:::",
                "include-user-header:::tools/clang/spanify/tests/header-original.cc:::-1:::-1:::base/containers/span.h"
            ],
            "size_info_available": true,
            "visited": false,
            "debug_info": {
                "rewrite_applied": false,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": [
                "sink"
            ]
        },
        {
            "id": 4,
            "replacement": "r:::tools/clang/spanify/tests/header-original.cc:::615:::5:::base::span<int>",
            "replacements": [
                "r:::tools/clang/spanify/tests/header-original.cc:::615:::5:::base::span<int>",
                "include-user-header:::tools/clang/spanify/tests/header-original.cc:::-1:::-1:::base/containers/span.h"
            ],
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": [
                "source"
            ]
        },
        {
            "id": 5,
            "replacement": "r:::tools/clang/spanify/tests/header-original.cc:::1224:::7:::",
            "replacements": [
                "r:::tools/clang/spanify/tests/header-original.cc:::1224:::7:::",
                "include-user-header:::tools/clang/spanify/tests/header-original.cc:::-1:::-1:::base/containers/span.h"
            ],
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": [
                "sink"
            ]
        },
        {
            "id": 6,
            "replacement": "r:::tools/clang/spanify/tests/header-original.h:::562:::5:::base::span<int>",
            "replacements": [
                "r:::tools/clang/spanify/tests/header-original.h:::562:::5:::base::span<int>",
                "include-user-header:::tools/clang/spanify/tests/header-original.h:::-1:::-1:::base/containers/span.h"
            ],
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": []
        }
    ],
    "links": [
        {
            "source": 0,
            "target": 1
        },
        {
            "source": 0,
            "target": 6
        },
        {
            "source": 2,
            "target": 3
        },
        {
            "source": 4,
            "target": 5
        },
        {
            "source": 6,
            "target": 0
        }
    ],
    "source": {
        "content": "// Copyright 2024 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n#include \"header-original.h\"\n\n#include <vector>\n\n#include \"./third_party/do_not_rewrite/header-original.h\"\n\n// Declared from first party.\n//\n// Expected rewrite:\n// void ProcessBuffer1(base::span<int> buffer, int size) {\nvoid ProcessBuffer1(int* buffer, int size) {\n  for (int i = 0; i < size; i++) {\n    buffer[i] = buffer[i] + 1;\n  }\n}\n\n// Declared from third party.\n//\n// Expected rewrite:\n// void ProcessBuffer4(base::span<int> buffer, int size) {\nvoid ProcessBuffer4(int* buffer, int size) {\n  for (int i = 0; i < size; i++) {\n    buffer[i] = buffer[i] * 2;\n  }\n}\n\nvoid AllocateAndProcess() {\n  std::vector<int> buffer(10);\n  // Expected rewrite:\n  // ProcessBuffer1(buffer, buffer.size());\n  ProcessBuffer1(buffer.data(), buffer.size());\n\n  // Expected rewrite:\n  // ProcessBuffer2(buffer.data(), buffer.size());\n  ProcessBuffer2(buffer.data(), buffer.size());\n\n  // Expected rewrite:\n  // ProcessBuffer3(buffer.data(), buffer.size());\n  ProcessBuffer3(buffer.data(), buffer.size());\n\n  // Expected rewrite:\n  // ProcessBuffer4(buffer, buffer.size());\n  ProcessBuffer4(buffer.data(), buffer.size());\n}\n",
        "file_path": "tools/clang/spanify/tests/header-original.cc",
        "rev": "733eff2098bf2f25b1cf0c182a3ee8beda9ef880"
    },
    "sources": [
        {
            "content": null,
            "file_path": "tools/clang/spanify/tests/header-original.cc"
        },
        {
            "content": null,
            "file_path": "tools/clang/spanify/tests/header-original.h"
        }
    ]
}