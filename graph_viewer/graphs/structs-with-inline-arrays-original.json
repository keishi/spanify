{
    "nodes": [
        {
            "id": 0,
            "replacement": "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::998:::48:::struct TestCases {\u0000    int val;\u0000  };\u0000const std::array<TestCases, 4> kTestCases = {",
            "replacements": [
                "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::998:::48:::struct TestCases {\u0000    int val;\u0000  };\u0000const std::array<TestCases, 4> kTestCases = {",
                "include-system-header:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::-1:::-1:::array",
                "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::1065:::1:::}}"
            ],
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": [
                "source",
                "sink"
            ]
        },
        {
            "id": 1,
            "replacement": "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::998:::0:::",
            "replacements": [
                "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::998:::0:::"
            ],
            "size_info_available": null,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": []
        },
        {
            "id": 2,
            "replacement": "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::1291:::48:::struct GTestCases {\u0000    int val;\u0000  };\u0000const std::array<GTestCases, 4> gTestCases = {",
            "replacements": [
                "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::1291:::48:::struct GTestCases {\u0000    int val;\u0000  };\u0000const std::array<GTestCases, 4> gTestCases = {",
                "include-system-header:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::-1:::-1:::array",
                "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::1358:::1:::}}"
            ],
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": [
                "source",
                "sink"
            ]
        },
        {
            "id": 3,
            "replacement": "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::1291:::0:::",
            "replacements": [
                "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::1291:::0:::"
            ],
            "size_info_available": null,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": []
        },
        {
            "id": 4,
            "replacement": "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::1575:::45:::struct Knights {\u0000    int val;\u0000  };\u0000const std::array<Knights, 4> knights = {",
            "replacements": [
                "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::1575:::45:::struct Knights {\u0000    int val;\u0000  };\u0000const std::array<Knights, 4> knights = {",
                "include-system-header:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::-1:::-1:::array",
                "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::1639:::1:::}}"
            ],
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": [
                "source",
                "sink"
            ]
        },
        {
            "id": 5,
            "replacement": "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::1575:::0:::",
            "replacements": [
                "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::1575:::0:::"
            ],
            "size_info_available": null,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": []
        },
        {
            "id": 6,
            "replacement": "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::809:::40:::struct FuncBuffer {\u0000    int val;\u0000  };\u0000std::array<FuncBuffer, 4> func_buffer",
            "replacements": [
                "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::809:::40:::struct FuncBuffer {\u0000    int val;\u0000  };\u0000std::array<FuncBuffer, 4> func_buffer",
                "include-system-header:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::-1:::-1:::array"
            ],
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": [
                "source",
                "sink"
            ]
        },
        {
            "id": 7,
            "replacement": "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::809:::0:::",
            "replacements": [
                "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::809:::0:::"
            ],
            "size_info_available": null,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": []
        },
        {
            "id": 8,
            "replacement": "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::1838:::56:::struct funcHasName {\u0000    int val;\u0000  };\u0000std::array<funcHasName, 4> funcNamedBuffer",
            "replacements": [
                "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::1838:::56:::struct funcHasName {\u0000    int val;\u0000  };\u0000std::array<funcHasName, 4> funcNamedBuffer",
                "include-system-header:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::-1:::-1:::array"
            ],
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": [
                "source",
                "sink"
            ]
        },
        {
            "id": 9,
            "replacement": "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::1838:::0:::",
            "replacements": [
                "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::1838:::0:::"
            ],
            "size_info_available": null,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": []
        },
        {
            "id": 10,
            "replacement": "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::1983:::42:::std::array<funcHasName, 4> funcNamedBufferButNotInline",
            "replacements": [
                "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::1983:::42:::std::array<funcHasName, 4> funcNamedBufferButNotInline",
                "include-system-header:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::-1:::-1:::array"
            ],
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": [
                "source",
                "sink"
            ]
        },
        {
            "id": 11,
            "replacement": "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::1983:::0:::",
            "replacements": [
                "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::1983:::0:::"
            ],
            "size_info_available": null,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": []
        },
        {
            "id": 12,
            "replacement": "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::2200:::56:::struct FuncBuffer2 {\u0000    int val;\u0000  };\u0000static const auto func_buffer2 = std::to_array<FuncBuffer2>(",
            "replacements": [
                "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::2200:::56:::struct FuncBuffer2 {\u0000    int val;\u0000  };\u0000static const auto func_buffer2 = std::to_array<FuncBuffer2>(",
                "include-system-header:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::-1:::-1:::array",
                "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::2275:::1:::})"
            ],
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": [
                "source",
                "sink"
            ]
        },
        {
            "id": 13,
            "replacement": "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::2200:::0:::",
            "replacements": [
                "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::2200:::0:::"
            ],
            "size_info_available": null,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": []
        },
        {
            "id": 14,
            "replacement": "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::2429:::62:::struct FuncBufferWithComment {\u0000    int val;  // Comment\u0000  };\u0000std::array<FuncBufferWithComment, 4> funcBufferWithComment",
            "replacements": [
                "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::2429:::62:::struct FuncBufferWithComment {\u0000    int val;  // Comment\u0000  };\u0000std::array<FuncBufferWithComment, 4> funcBufferWithComment",
                "include-system-header:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::-1:::-1:::array"
            ],
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": [
                "source",
                "sink"
            ]
        },
        {
            "id": 15,
            "replacement": "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::2429:::0:::",
            "replacements": [
                "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::2429:::0:::"
            ],
            "size_info_available": null,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": []
        },
        {
            "id": 16,
            "replacement": "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::2696:::57:::class UnnamedClassBuffer {\u0000   public:\u0000    int val;\u0000  };\u0000std::array<UnnamedClassBuffer, 4> unnamedClassBuffer",
            "replacements": [
                "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::2696:::57:::class UnnamedClassBuffer {\u0000   public:\u0000    int val;\u0000  };\u0000std::array<UnnamedClassBuffer, 4> unnamedClassBuffer",
                "include-system-header:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::-1:::-1:::array"
            ],
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": [
                "source",
                "sink"
            ]
        },
        {
            "id": 17,
            "replacement": "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::2696:::0:::",
            "replacements": [
                "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::2696:::0:::"
            ],
            "size_info_available": null,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": []
        },
        {
            "id": 18,
            "replacement": "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::2962:::62:::union UnnamedUnionBuffer {\u0000    int val;\u0000    float fval;\u0000  };\u0000std::array<UnnamedUnionBuffer, 4> unnamedUnionBuffer",
            "replacements": [
                "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::2962:::62:::union UnnamedUnionBuffer {\u0000    int val;\u0000    float fval;\u0000  };\u0000std::array<UnnamedUnionBuffer, 4> unnamedUnionBuffer",
                "include-system-header:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::-1:::-1:::array"
            ],
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": [
                "source",
                "sink"
            ]
        },
        {
            "id": 19,
            "replacement": "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::2962:::0:::",
            "replacements": [
                "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::2962:::0:::"
            ],
            "size_info_available": null,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": []
        },
        {
            "id": 20,
            "replacement": "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::3202:::75:::struct NestedStructBuffer {\u0000    struct {\u0000      int val;\u0000    } inner;\u0000  };\u0000std::array<NestedStructBuffer, 4> nestedStructBuffer",
            "replacements": [
                "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::3202:::75:::struct NestedStructBuffer {\u0000    struct {\u0000      int val;\u0000    } inner;\u0000  };\u0000std::array<NestedStructBuffer, 4> nestedStructBuffer",
                "include-system-header:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::-1:::-1:::array"
            ],
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": [
                "source",
                "sink"
            ]
        },
        {
            "id": 21,
            "replacement": "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::3202:::0:::",
            "replacements": [
                "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::3202:::0:::"
            ],
            "size_info_available": null,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": []
        },
        {
            "id": 22,
            "replacement": "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::4127:::71:::struct MyGlobalStruct1 {\u0000  int val;\u0000};\u0000const std::array<MyGlobalStruct1, 1 + 2> my_global_struct1 = {",
            "replacements": [
                "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::4127:::71:::struct MyGlobalStruct1 {\u0000  int val;\u0000};\u0000const std::array<MyGlobalStruct1, 1 + 2> my_global_struct1 = {",
                "include-system-header:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::-1:::-1:::array",
                "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::4227:::1:::}}"
            ],
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": [
                "source",
                "sink"
            ]
        },
        {
            "id": 23,
            "replacement": "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::4127:::0:::",
            "replacements": [
                "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::4127:::0:::"
            ],
            "size_info_available": null,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": []
        },
        {
            "id": 24,
            "replacement": "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::4544:::60:::struct MyGlobalStruct2 {\u0000  int val;\u0000};\u0000auto my_global_struct2 = std::to_array<MyGlobalStruct2>(",
            "replacements": [
                "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::4544:::60:::struct MyGlobalStruct2 {\u0000  int val;\u0000};\u0000auto my_global_struct2 = std::to_array<MyGlobalStruct2>(",
                "include-system-header:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::-1:::-1:::array",
                "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::4633:::1:::})"
            ],
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": [
                "source",
                "sink"
            ]
        },
        {
            "id": 25,
            "replacement": "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::4544:::0:::",
            "replacements": [
                "r:::tools/clang/spanify/tests/structs-with-inline-arrays-original.cc:::4544:::0:::"
            ],
            "size_info_available": null,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": []
        }
    ],
    "links": [
        {
            "source": 0,
            "target": 1
        },
        {
            "source": 2,
            "target": 3
        },
        {
            "source": 4,
            "target": 5
        },
        {
            "source": 6,
            "target": 7
        },
        {
            "source": 8,
            "target": 9
        },
        {
            "source": 10,
            "target": 11
        },
        {
            "source": 12,
            "target": 13
        },
        {
            "source": 14,
            "target": 15
        },
        {
            "source": 16,
            "target": 17
        },
        {
            "source": 18,
            "target": 19
        },
        {
            "source": 20,
            "target": 21
        },
        {
            "source": 22,
            "target": 23
        },
        {
            "source": 24,
            "target": 25
        }
    ],
    "source": {
        "content": "// Copyright 2024 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include <tuple>\n\n// No expected rewrite:\n// We don't handle global C arrays.\n// TODO(364338808): Handle this case.\nstruct {\n  int val;\n} globalBuffer[4];\n\n// No expected rewrite:\n// We don't handle global C arrays.\n// TODO(364338808): Handle this case.\nstruct GlobalHasName {\n  int val;\n} globalNamedBuffer[4];\n\n// No expected rewrite:\n// We don't handle global C arrays.\n// TODO(364338808): Handle this case.\nGlobalHasName globalNamedBufferButNotInline[4];\n\nint UnsafeIndex();  // This function might return an out-of-bound index.\n\nvoid fct() {\n  // Expected rewrite:\n  // struct FuncBuffer {\n  //   int val;\n  // };\n  // std::array<FuncBuffer, 4> func_buffer;\n  struct {\n    int val;\n  } func_buffer[4];\n\n  // Expected rewrite:\n  // struct TestCases {\n  //   int val;\n  // };\n  // const std::array<TestCases, 4> kTestCases = {{{1}, {2}, {3}, {4}}};\n  const struct {\n    int val;\n  } kTestCases[4] = {{1}, {2}, {3}, {4}};\n  std::ignore = kTestCases[UnsafeIndex()].val;  // Trigger spanification.\n\n  // Expected rewrite:\n  // struct GTestCases {\n  //   int val;\n  // };\n  // const std::array<GTestCases, 4> gTestCases = {{{1}, {2}, {3}, {4}}};\n  const struct {\n    int val;\n  } gTestCases[4] = {{1}, {2}, {3}, {4}};\n  std::ignore = gTestCases[UnsafeIndex()].val;  // Trigger spanification.\n\n  // Expected rewrite:\n  // struct Knights {\n  //   int val;\n  // };\n  // const std::array<Knights, 4> knights = {{{1}, {2}, {3}, {4}}};\n  const struct {\n    int val;\n  } knights[4] = {{1}, {2}, {3}, {4}};\n  std::ignore = knights[UnsafeIndex()].val;  // Trigger spanification.\n\n  // Expected rewrite:\n  // struct funcHasName {\n  //   int val;\n  // };\n  // std::array<funcHasName, 4> funcNamedBuffer;\n  struct funcHasName {\n    int val;\n  } funcNamedBuffer[4];\n\n  // Expected rewrite:\n  // std::array<funcHasName, 4> funcNamedBufferButNotInline;\n  funcHasName funcNamedBufferButNotInline[4];\n\n  // Expected rewrite:\n  // struct FuncBuffer2 {\n  //   int val;\n  // };\n  // static const auto func_buffer2 =\n  //     std::to_array<FuncBuffer2>({{1}, {2}, {3}, {4}});\n  static const struct {\n    int val;\n  } func_buffer2[] = {{1}, {2}, {3}, {4}};\n\n  // Expected rewrite:\n  // struct FuncBufferWithComment {\n  //   int val; // Comment\n  // };\n  // std::array<FuncBuffer, 4> funcBufferWithComment;\n  struct {\n    int val;  // Comment\n  } funcBufferWithComment[4];\n\n  // Classes can also be used in a similar way.\n  // Expected rewrite:\n  // class UnnamedClassBuffer {\n  //  public:\n  //   int val;\n  // };\n  // std::array<UnnamedClassBuffer, 4> unnamedClassBuffer;\n  class {\n   public:\n    int val;\n  } unnamedClassBuffer[4];\n\n  // Unions can also be used in a similar way.\n  // Expected rewrite:\n  // union UnnamedUnionBuffer {\n  //   int val;\n  //   float fval;\n  // };\n  // std::array<UnnamedUnionBuffer, 4> unnamedUnionBuffer;\n  union {\n    int val;\n    float fval;\n  } unnamedUnionBuffer[4];\n\n  // Expected rewrite:\n  // struct NestedStructBuffer {\n  //   struct {\n  //     int val;\n  //   } inner;\n  // };\n  // std::array<NestedStructBuffer, 3> nestedStructBuffer;\n  struct {\n    struct {\n      int val;\n    } inner;\n  } nestedStructBuffer[4];\n\n  // Buffer accesses to trigger spanification.\n  func_buffer[UnsafeIndex()].val = 3;\n  globalBuffer[UnsafeIndex()].val = 3;\n  funcNamedBuffer[UnsafeIndex()].val = 3;\n  globalNamedBuffer[UnsafeIndex()].val = 3;\n  globalNamedBufferButNotInline[UnsafeIndex()].val = 3;\n  funcNamedBufferButNotInline[UnsafeIndex()].val = 3;\n  (void)func_buffer2[UnsafeIndex()].val;\n  funcBufferWithComment[UnsafeIndex()].val = 3;\n  unnamedClassBuffer[UnsafeIndex()].val = 3;\n  unnamedUnionBuffer[UnsafeIndex()].val = 3;\n  nestedStructBuffer[UnsafeIndex()].inner.val = 3;\n}\n\n// `const` makes the decl have internal linkage, so this should be rewritten\n// regardless of crbug.com/364338808.\n// Expected rewrite:\n// struct MyGlobalStruct1 {\n//   int val;\n// };\n// const std::array<MyGlobalStruct1, 1 + 2> my_global_struct1 = {{\n//     {1},\n//     {2},\n//     {3},\n// }};\nconst struct MyGlobalStruct1 {\n  int val;\n} my_global_struct1[1 + 2] = {\n    {1},\n    {2},\n    {3},\n};\n\nnamespace {\n\n// Anonymous namespace makes the decl have internal linkage, so this should be\n// rewritten regardless of crbug.com/364338808.\n// Expected rewrite:\n// struct MyGlobalStruct2 {\n//   int val;\n// };\n// auto my_global_struct2 = std::to_array<MyGlobalStruct2>({\n//     {1},\n//     {2},\n//     {3},\n// });\nstruct MyGlobalStruct2 {\n  int val;\n} my_global_struct2[] = {\n    {1},\n    {2},\n    {3},\n};\n\n}  // namespace\n\nvoid named_global_struct_with_var_decl() {\n  // Buffer accesses to trigger spanification for the global structs above.\n  std::ignore = my_global_struct1[UnsafeIndex()].val;\n  std::ignore = my_global_struct2[UnsafeIndex()].val;\n}\n",
        "file_path": "tools/clang/spanify/tests/structs-with-inline-arrays-original.cc",
        "rev": "733eff2098bf2f25b1cf0c182a3ee8beda9ef880"
    },
    "sources": [
        {
            "content": null,
            "file_path": "tools/clang/spanify/tests/structs-with-inline-arrays-original.cc"
        }
    ]
}