{
    "nodes": [
        {
            "id": 0,
            "replacement": "r:::tools/clang/spanify/tests/char-array-with-string-literal-original.cc:::361:::16:::const std::string_view buf",
            "replacements": [
                "r:::tools/clang/spanify/tests/char-array-with-string-literal-original.cc:::361:::16:::const std::string_view buf",
                "include-system-header:::tools/clang/spanify/tests/char-array-with-string-literal-original.cc:::-1:::-1:::string_view"
            ],
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": [
                "source",
                "sink"
            ]
        },
        {
            "id": 1,
            "replacement": "r:::tools/clang/spanify/tests/char-array-with-string-literal-original.cc:::361:::0:::",
            "replacements": [
                "r:::tools/clang/spanify/tests/char-array-with-string-literal-original.cc:::361:::0:::"
            ],
            "size_info_available": null,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": []
        },
        {
            "id": 2,
            "replacement": "r:::tools/clang/spanify/tests/char-array-with-string-literal-original.cc:::504:::20:::const std::wstring_view buf2",
            "replacements": [
                "r:::tools/clang/spanify/tests/char-array-with-string-literal-original.cc:::504:::20:::const std::wstring_view buf2",
                "include-system-header:::tools/clang/spanify/tests/char-array-with-string-literal-original.cc:::-1:::-1:::string_view"
            ],
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": [
                "source",
                "sink"
            ]
        },
        {
            "id": 3,
            "replacement": "r:::tools/clang/spanify/tests/char-array-with-string-literal-original.cc:::504:::0:::",
            "replacements": [
                "r:::tools/clang/spanify/tests/char-array-with-string-literal-original.cc:::504:::0:::"
            ],
            "size_info_available": null,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": []
        },
        {
            "id": 4,
            "replacement": "r:::tools/clang/spanify/tests/char-array-with-string-literal-original.cc:::655:::21:::const std::u16string_view buf4",
            "replacements": [
                "r:::tools/clang/spanify/tests/char-array-with-string-literal-original.cc:::655:::21:::const std::u16string_view buf4",
                "include-system-header:::tools/clang/spanify/tests/char-array-with-string-literal-original.cc:::-1:::-1:::string_view"
            ],
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": [
                "source",
                "sink"
            ]
        },
        {
            "id": 5,
            "replacement": "r:::tools/clang/spanify/tests/char-array-with-string-literal-original.cc:::655:::0:::",
            "replacements": [
                "r:::tools/clang/spanify/tests/char-array-with-string-literal-original.cc:::655:::0:::"
            ],
            "size_info_available": null,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": []
        },
        {
            "id": 6,
            "replacement": "r:::tools/clang/spanify/tests/char-array-with-string-literal-original.cc:::807:::21:::const std::u32string_view buf5",
            "replacements": [
                "r:::tools/clang/spanify/tests/char-array-with-string-literal-original.cc:::807:::21:::const std::u32string_view buf5",
                "include-system-header:::tools/clang/spanify/tests/char-array-with-string-literal-original.cc:::-1:::-1:::string_view"
            ],
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": [
                "source",
                "sink"
            ]
        },
        {
            "id": 7,
            "replacement": "r:::tools/clang/spanify/tests/char-array-with-string-literal-original.cc:::807:::0:::",
            "replacements": [
                "r:::tools/clang/spanify/tests/char-array-with-string-literal-original.cc:::807:::0:::"
            ],
            "size_info_available": null,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            },
            "node_types": []
        }
    ],
    "links": [
        {
            "source": 0,
            "target": 1
        },
        {
            "source": 2,
            "target": 3
        },
        {
            "source": 4,
            "target": 5
        },
        {
            "source": 6,
            "target": 7
        }
    ],
    "source": {
        "content": "// Copyright 2024 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include <uchar.h>\n#include <wchar.h>\n\n#include <tuple>\n\nint UnsafeIndex();  // This function might return an out-of-bound index.\n\nvoid func() {\n  // Expected rewrite:\n  // const std::string_view buf = \"123456789\";\n  const char buf[] = \"123456789\";\n  std::ignore = buf[UnsafeIndex()];\n\n  // Expected rewrite:\n  // const std::wstring_view buf = L\"123456789\";\n  const wchar_t buf2[] = L\"123456789\";\n  std::ignore = buf2[UnsafeIndex()];\n\n  // Expected rewrite:\n  // const std::u16string_view buf = u\"123456789\";\n  const char16_t buf4[] = u\"123456789\";\n  std::ignore = buf4[UnsafeIndex()];\n\n  // Expected rewrite:\n  // const std::u32string_view buf = U\"123456789\";\n  const char32_t buf5[] = U\"123456789\";\n  std::ignore = buf5[UnsafeIndex()];\n}\n",
        "file_path": "tools/clang/spanify/tests/char-array-with-string-literal-original.cc",
        "rev": "733eff2098bf2f25b1cf0c182a3ee8beda9ef880"
    },
    "sources": [
        {
            "content": null,
            "file_path": "tools/clang/spanify/tests/char-array-with-string-literal-original.cc"
        }
    ]
}