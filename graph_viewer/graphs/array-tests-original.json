{
    "nodes": [
        {
            "id": 0,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::796:::27:::constexpr std::array<int, size> buf3 = ",
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 1,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::796:::0:::",
            "size_info_available": null,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 2,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::497:::12:::auto buf = std::to_array<int>(",
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 3,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::497:::0:::",
            "size_info_available": null,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 4,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::624:::14:::std::array<int, 5> buf2 = ",
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 5,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::624:::0:::",
            "size_info_available": null,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 6,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::931:::17:::std::array<int, buf3[0]> buf4",
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 7,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::931:::0:::",
            "size_info_available": null,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 8,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::1075:::20:::auto buf5 = std::to_array<ns1::Type1>(",
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 9,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::1075:::0:::",
            "size_info_available": null,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 10,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::1235:::18:::auto buf6 = std::to_array<uint16_t>(",
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 11,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::1235:::0:::",
            "size_info_available": null,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 12,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::1362:::23:::std::array<int (*)(int), 16> buf7 = ",
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 13,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::1362:::0:::",
            "size_info_available": null,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 14,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::1490:::20:::std::array<int (**)[], 16> buf8 = ",
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 15,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::1490:::0:::",
            "size_info_available": null,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 16,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::1639:::20:::std::array<Arr, buf3[0]> buf9 = ",
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 17,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::1639:::0:::",
            "size_info_available": null,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 18,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::1801:::38:::static auto buf10 = std::to_array<const volatile char *>(",
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 19,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::1801:::0:::",
            "size_info_available": null,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 20,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::2039:::9:::auto buf = std::to_array<int>(",
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 21,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::2039:::0:::",
            "size_info_available": null,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 22,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::2198:::10:::(buf.size() * sizeof(decltype(buf)::value_type))",
            "size_info_available": null,
            "visited": false,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 23,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::2318:::11:::(buf.size() * sizeof(decltype(buf)::value_type))",
            "size_info_available": null,
            "visited": false,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 24,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::2596:::0:::.data()",
            "size_info_available": null,
            "visited": false,
            "debug_info": {
                "rewrite_applied": false,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 25,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::2519:::0:::",
            "size_info_available": null,
            "visited": false,
            "debug_info": {
                "rewrite_applied": false,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 26,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::2603:::11:::(buf.size() * sizeof(decltype(buf)::value_type))",
            "size_info_available": null,
            "visited": false,
            "debug_info": {
                "rewrite_applied": false,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 27,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::2699:::5:::base::span<int>",
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 28,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::3218:::0:::<empty>",
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 29,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::2840:::14:::base::span<int, 1 + 2> arr",
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 30,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::3240:::0:::<empty>",
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 31,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::2994:::9:::base::span<int> arr",
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 32,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::3269:::0:::<empty>",
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 33,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::3144:::12:::auto arr = std::to_array<int>(",
            "size_info_available": true,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        },
        {
            "id": 34,
            "replacement": "r:::tools/clang/spanify/tests/array-tests-original.cc:::3144:::0:::",
            "size_info_available": null,
            "visited": true,
            "debug_info": {
                "rewrite_applied": true,
                "original_is_buffer": false,
                "original_size_info_available": null
            }
        }
    ],
    "links": [
        {
            "source": 0,
            "target": 1
        },
        {
            "source": 2,
            "target": 3
        },
        {
            "source": 4,
            "target": 5
        },
        {
            "source": 6,
            "target": 7
        },
        {
            "source": 8,
            "target": 9
        },
        {
            "source": 10,
            "target": 11
        },
        {
            "source": 12,
            "target": 13
        },
        {
            "source": 14,
            "target": 15
        },
        {
            "source": 16,
            "target": 17
        },
        {
            "source": 18,
            "target": 19
        },
        {
            "source": 20,
            "target": 21
        },
        {
            "source": 22,
            "target": 21
        },
        {
            "source": 23,
            "target": 21
        },
        {
            "source": 24,
            "target": 25
        },
        {
            "source": 26,
            "target": 25
        },
        {
            "source": 27,
            "target": 28
        },
        {
            "source": 29,
            "target": 30
        },
        {
            "source": 31,
            "target": 32
        },
        {
            "source": 33,
            "target": 34
        }
    ],
    "source": {
        "content": "// Copyright 2024 The Chromium Authors\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n#include <cstdint>\n#include <cstring>\n#include <tuple>\n\n// No rewrite expected.\nextern const int kPropertyVisitedIDs[];\n\nnamespace ns1 {\n\nstruct Type1 {\n  int value;\n};\n\n}  // namespace ns1\n\nint UnsafeIndex();  // This function might return an out-of-bound index.\n\nvoid fct() {\n  // Expected rewrite:\n  // auto buf = std::to_array<int>({1, 2, 3, 4});\n  int buf[] = {1, 2, 3, 4};\n  buf[UnsafeIndex()] = 11;\n\n  // Expected rewrite:\n  // std::array<int, 5> buf2 = {1, 1, 1, 1, 1};\n  int buf2[5] = {1, 1, 1, 1, 1};\n  buf2[UnsafeIndex()] = 11;\n\n  constexpr int size = 5;\n  // Expected rewrite:\n  // constexpr std::array<int, size> buf3 = {1, 1, 1, 1, 1};\n  constexpr int buf3[size] = {1, 1, 1, 1, 1};\n  (void)buf3[UnsafeIndex()];\n\n  // Expected rewrite:\n  // std::array<int, buf3[0]> buf4;\n  int buf4[buf3[0]];\n  buf4[UnsafeIndex()] = 11;\n\n  // Expected rewrite:\n  // auto buf5 = std::to_array<ns1::Type1>({{1}, {1}, {1}, {1}, {1}});\n  ns1::Type1 buf5[] = {{1}, {1}, {1}, {1}, {1}};\n  buf5[UnsafeIndex()].value = 11;\n\n  // Expected rewrite:\n  // auto buf6 = std::to_array<uint16_t>({1, 1, 1});\n  uint16_t buf6[] = {1, 1, 1};\n  buf6[UnsafeIndex()] = 1;\n\n  // Expected rewrite:\n  // std::array<int (*)(int), 16> buf7 = {};\n  int (*buf7[16])(int) = {};\n  buf7[UnsafeIndex()] = nullptr;\n\n  // Expected rewrite:\n  // std::array<int(**)[], 16> buf8 = {};\n  int(**buf8[16])[] = {};\n  buf8[UnsafeIndex()] = nullptr;\n\n  using Arr = int(**)[];\n  // Expected rewrite:\n  // std::array<Arr, buf3[0]> buf9 = {};\n  Arr buf9[buf3[0]] = {};\n  buf9[UnsafeIndex()] = nullptr;\n\n  // Expected rewrite:\n  // static auto buf10 = std::to_array<const volatile char*>({\"1\", \"2\", \"3\"});\n  volatile static const char* buf10[] = {\"1\", \"2\", \"3\"};\n  buf10[UnsafeIndex()] = nullptr;\n\n  std::ignore = kPropertyVisitedIDs[UnsafeIndex()];\n}\n\nvoid sizeof_array_expr() {\n  // Expected rewrite:\n  // auto buf = std::to_array<int>({1});\n  int buf[]{1};\n  std::ignore = buf[UnsafeIndex()];\n\n  // Expected rewrite:\n  // std::ignore = (buf.size() * sizeof(decltype(buf)::value_type));\n  std::ignore = sizeof buf;\n  // Expected rewrite:\n  // std::ignore = (buf.size() * sizeof(decltype(buf)::value_type));\n  std::ignore = sizeof(buf);\n  // The following won't be rewritten.\n  std::ignore = sizeof *buf;\n  std::ignore = sizeof buf[0];\n}\n\n// Test for crbug.com/383424943.\nvoid crbug_383424943() {\n  // No rewrite expected.\n  int buf[]{1};\n  // Using sizeof was causing buf to be rewritten.\n  memset(buf, 'x', sizeof(buf));\n}\n\n// Expected rewrite:\n// void c_ptr_param(base::span<int> ptr)\nvoid c_ptr_param(int* ptr) {\n  std::ignore = ptr[UnsafeIndex()];\n}\n\n// Expected rewrite:\n// void c_array_param(base::span<int, 1 + 2> arr)\nvoid c_array_param(int arr[1 + 2]) {\n  std::ignore = arr[UnsafeIndex()];\n}\n\n// Expected rewrite:\n// void c_array_nosize_param(base::span<int> arr)\nvoid c_array_nosize_param(int arr[]) {\n  std::ignore = arr[UnsafeIndex()];\n}\n\nvoid test_func_params() {\n  // Expected rewrite:\n  // auto arr = std::to_array<int>({1, 2, 3});\n  int arr[] = {1, 2, 3};\n  std::ignore = arr[UnsafeIndex()];\n\n  c_ptr_param(arr);\n  c_array_param(arr);\n  c_array_nosize_param(arr);\n}\n",
        "file_path": "tools/clang/spanify/tests/array-tests-original.cc",
        "rev": "733eff2098bf2f25b1cf0c182a3ee8beda9ef880"
    },
    "sources": [
        {
            "content": null,
            "file_path": "tools/clang/spanify/tests/array-tests-original.cc"
        }
    ]
}